
tokens {
    top <= `a` | `b`;
}

lexer {
    main { body }

    mode body {
        top => { emit; }
        eof => { pop; }
    }
}

parser {
    main { S }

    S.A <- `a` vs:X[nA]*;
    S.B <- `b` vs:X*;

    X.A <- `a`;
    X.B[nA] <- `b`;
}

compile_test {
    !LR(0);
    LR(1);
    LR(2);
}

test {
    `a`;
    `ab`;
    `abb`;
    `b`;
    `ba`;
    `bb`;
    `baabbab`;
    `a##a`;
    `abbb##a`;
}
