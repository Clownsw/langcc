
tokens {
    top <= `a` | `b` | `,`;
}

lexer {
    main { body }

    mode body {
        top => { emit; }
        eof => { pop; }
    }
}

parser {
    main { S }

    attr {
        match {
            AB.A => lhs[mA],
        };
    }

    S <- AB[mA]* `,` AB* `,` AB[mA]*;

    AB.A <- `a`;
    AB.B <- `b`;
}

test {
    `a,a,a`;
    `a,b,a`;
    `a,b,##b`;
    `aaa,abab,aa`;
    `aa##b,a,a`;
    `,,`;
    `aaaaa,,`;
    `aaaaa,,aa`;
    `aaaaa,,aa##ba`;
}
